name: Test PHP Framework

on:
  push:
    branches:
      - master

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del codice
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        coverage: xdebug
        tools: composer:v2

    - name: Ottieni la cache delle dipendenze di Composer
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Installa le dipendenze di Composer
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Setup Chrome and Chromedriver
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable # O 'stable-1' per la penultima stabile, o una versione specifica come '137.0.7151.119'
        # chrome-version: '137.0.7151.119' # Puoi specificare una versione precisa se 'stable-1' non basta o per maggiore controllo
                                       # Per il momento, 'stable' potrebbe anche funzionare se il problema Ã¨ stato risolto nel frattempo.
                                       # Ma se vuoi essere sicuro, usa 'stable-1' o la versione che sai che ha un driver.

    - name: Start Chromedriver
      run: |
        # browser-actions/setup-chrome installa chromedriver e lo aggiunge al PATH
        # quindi puoi semplicemente lanciarlo
        chromedriver --port=9515 --url-base=/wd/hub &
        sleep 5 # Dai tempo a Chromedriver di avviarsi
      # Assicurati che il tuo WebDriver in acceptance.suite.yml punti a questa porta (di solito 9515)
      # Ad esempio: url: 'http://127.0.0.1:8000', port: 9515

    - name: Start PHP built-in web server
      run: |
        php -S 127.0.0.1:8000 -t public/ > /dev/null 2>&1 &
        echo "PHP web server started on 127.0.0.1:8000"
      # Sostituisci 'public/' con la root del tuo server web

    - name: Wait for web server to be ready
      run: |
        timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' 127.0.0.1:8000)" != "200" ]]; do sleep 1; done'

    - name: Esegui i test di Codeception
      run: _src/_sh/_codeception.run.sh
