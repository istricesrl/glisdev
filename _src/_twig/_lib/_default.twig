{# MACRO GENERICHE PER LA RAPPRESENTAZIONE DEI CONTENUTI
    Questo file contiene delle macro utili per la rappresentazione dei contenuti su tutti i template
    NOTA: IMPORTARE SEMPRE COME CMS ad es. import '_bin/_default.html' as cms #}

{# formButton() - crea un bottone di invio form compatibile con reCAPTCHA
    Questa macro crea un bottone di invio form integrato con Google reCAPTCHA, per funzionare richiede
    alcune informazioni di base fra cui le chiavi di reCAPTCHA; è possibile inserire più di un bottone per
    pagina specificando il parametro dup che indica alla macro di non ripetere il codice reCAPTCHA
    ridondante. #}
{% macro formButton( options ) %}
    <!-- macro {{ _self }}::formButton() -->

    {# valori di default #}
    {% set options = {
        'form': [],
        'field': [],
        'tooltip': [],
        'recaptcha': [],
        'page': []
    }|merge( options ) %}

    {# valori di default per l'array form #}
    {% set form = {
        'id': '',
        'table': '',
        'subtable': '',
        'counter': '',
        'step': ''
    }|merge( options.form ) %}

    {# valori di default per l'array field #}
    {% set field = {
        'id': '',
        'text': '',
        'type': 'submit',
        'default': '',
        'disabled': '',
        'class': 'btn btn-secondary btn-sm btn-block',
        'placeholder': '',
        'pattern': '',
        'required': '',
        'onclick': ''
    }|merge( options.field ) %}

    {# valori di default per l'array tooltip #}
    {% set tooltip = {
        'delay': '1000',
        'placement': 'bottom'
    }|merge( options.tooltip ) %}

    {# valori di default per l'array recaptcha #}
    {% if options.recaptcha %}
        {% set recaptcha = {
        }|merge( options.recaptcha ) %}
    {% endif %}

    {# valori di default per l'array page #}
    {% set page = {
    }|merge( options.page ) %}

    {% if recaptcha.keys.public %}

        <!-- type settato automaticamente a button -->
        {% set type = 'button' %}

        <!-- onclick settato automaticamente vuoto -->
        {% set onclick = '' %}

        {% if not recaptcha.duplicate %}
            <!-- script per reCAPTCHA -->
            <script src="https://www.google.com/recaptcha/api.js"></script>
            <!-- campo hidden generato automaticamente dalla macro formButton() per la chiave reCaptcha {{ recaptcha.keys.public }} -->
            <input type="hidden" name="{{ form.table }}{% if form.subtable %}[{{ form.subtable }}]{% endif %}[__recaptcha_token__]" value="" id="{{ form.id }}RecaptchaToken">
        {% endif %}

        <!-- funzione generata automaticamente dalla macro formButton() per la chiave reCaptcha {{ recaptcha.keys.public }} -->
        <script>
            function onSubmit{{ form.id }}{{ field.id }}( token ) {
                console.log( token );
                var forceValid = 0;
                {{ onclick|raw }}
                console.log( 'forzatura validità: ' + forceValid );
                document.getElementById("{{ form.id }}RecaptchaToken").value = token;
                var contactForm = document.getElementById("{{ form.id }}");
                console.log( 'onSubmit da reCAPTCHA per {{ form.id }}' );
                if(contactForm.checkValidity()||forceValid==1) {
                    console.log( 'form valido' );
                    contactForm.submit();
                } else {
                    console.log( 'form non valido' );
                    grecaptcha.reset();
                    contactForm.reportValidity();
                } 
                console.log('invocata protezione reCAPTCHA');
            }
        </script>

        {% set recaptchaClass = ' g-recaptcha' %}
        {% set dataSiteKey = recaptcha.keys.public %}
        {% set dataCallBack = 'onSubmit' ~ form.id ~ field.id %}
        {% set dataAction = 'submit' %}

    {% elseif field.onclick %}
        {% set type = 'button' %}
        {% set onclick = field.onclick %}
    {% else %}
        {% set type = field.type %}
    {% endif %}

    <button type="{{ type }}" class="{{ field.class }}{{ recaptchaClass }}"
        {% if field.id %}id="{{ field.id }}"{% endif %} 
        {% if onclick %}onclick="{{ onclick }}"{% endif %}
        {% if field.placeholder %}placeholder="{{ field.placeholder|raw }}"{% endif %}
        {% if tooltip.title %}title="{{ tooltip.title|raw }}" data-toggle="tooltip" data-placement="{{ tooltip.placement }}" data-delay="{{ tooltip.delay }}"{% endif %}
        {% if dataSiteKey %}data-sitekey="{{ dataSiteKey }}"{% endif %}
        {% if dataCallBack %}data-callback="{{ dataCallBack }}"{% endif %}
        {% if dataAction %}data-action="{{ dataAction }}"{% endif %}>{{ field.text|raw }}
    </button>

    <!-- fine macro {{ _self }}::formButton() -->
{% endmacro formButton %}

{# TODO commentare #}
{% macro image( options ) %}
    <!-- macro {{ _self }}::image() -->

    {# valori di default #}
    {% set options = {
        'source': [],
        'site': [],
        'page': [],
        'image': []
    }|merge( options ) %}

    {# valori di default per l'array source #}
    {% set source = {
        'ruolo': '',
        'ordine': '',
        'ietf': 'it-IT',
        'class': 'img-fluid lazyload'
    }|merge( options.source ) %}

    {# valori di default per l'array site #}
    {% set site = {
    }|merge( options.site ) %}

    {# valori di default per l'array page #}
    {% set page = {
    }|merge( options.page ) %}

    {# valori di default per l'array image #}
    {% set image = {
    }|merge( options.image ) %}

    {# dettagli dell'immagine prelevati dalla pagina #}
    {% set img = page.contents.images[ source.ruolo ][ source.ordine ] %}

    {# se il path è per lingua #}
    {% if img.path is iterable %}
        {% set path = img.path[ source.ietf ] %}
    {% else %}
        {% set path = img.path %}
    {% endif %}

    <picture class="{% if img.class %}{{ img.class }}{% endif %}">

        {% if not img.orientamento or img.path_alternativo or img.orientamento == 'L' %}
        <source	type="image/webp"
	        {% if not img.orientamento or img.path_alternativo %}media="(orientation: landscape)"{% endif %}
	        srcset="{% if image.formats %}{% for w,h in image.formats.l %}{{ site.root }}var/immagini/{{ w }}l/{{ path|split('/')|last|replace({'.jpg':'.webp','.jpeg':'.webp','.png':'.webp'}) }} {{ w }}w{% if not loop.last %}, {% endif %}
            {% endfor %}{% else %}{% for s in image %}{{ s|replace({'.jpg':'.webp','.jpeg':'.webp','.png':'.webp'}) }}{% if not loop.last %}, {% endif %}{% endfor %}{% endif %}">
        <source type="{{ img.mimetype[ source.ietf ] }}"
	        {% if not img.orientamento or img.path_alternativo %}media="(orientation: landscape)"{% endif %}
	        srcset="{% if image.formats %}{% for w,h in image.formats.l %}{{ site.root }}var/immagini/{{ w }}l/{{ path|split('/')|last }} {{ w }}w{% if not loop.last %}, {% endif %}
            {% endfor %}{% else %}{% for s in image %}{{ s }}{% if not loop.last %}, {% endif %}{% endfor %}{% endif %}">
        {% endif %}

        {% if not img.orientamento or img.path_alternativo or img.orientamento == 'L' %}
        <source type="image/webp"
	        {% if not img.orientamento or img.path_alternativo %}media="(orientation: portrait)"{% endif %}
	        srcset="{% if image.formats %}{% for w,h in image.formats.p %}{{ site.root }}var/immagini/{{ w }}p/{{ path|split('/')|last|replace({'.jpg':'.webp','.jpeg':'.webp','.png':'.webp'}) }} {{ w }}w{% if not loop.last %}, {% endif %}{% endfor %}{% else %}{% for s in image %}{{ s|replace({'.jpg':'.webp','.jpeg':'.webp','.png':'.webp'}) }}{% if not loop.last %}, {% endif %}{% endfor %}{% endif %}">
        <source
	        type="{{ img.mimetype[ source.ietf ] }}"
	        {% if not img.orientamento or img.path_alternativo %}media="(orientation: portrait)"{% endif %}
	        srcset="{% if image.formats %}{% for w,h in image.formats.p %}{{ site.root }}var/immagini/{{ w }}p/{{ path|split('/')|last }} {{ w }}w{% if not loop.last %}, {% endif %}{% endfor %}{% else %}{% for s in image %}{{ s }}{% if not loop.last %}, {% endif %}{% endfor %}{% endif %}">
        {% endif %}

        <img alt="{{ img.h1[ source.ietf ] }}"
            style="width: 100%;"
            data-src="{{ site.root }}{{ path|replace({'.jpg':'.webp','.jpeg':'.webp','.png':'.webp'}) }}" >

    </picture>

    <!-- fine macro {{ _self }}::image() -->
{% endmacro image %}
